/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */


export interface paths {
  "/hello": {
    /** Hello */
    get: operations["swiftink_api_api_hello"];
  };
  "/me": {
    /** Me */
    get: operations["swiftink_api_api_me"];
  };
  "/transcripts/": {
    /**
     * Get Transcripts
     * @description Get all transcripts for the current user
     */
    get: operations["swiftink_api_routers_transcript_transcript_router_get_transcripts"];
    /** Create Transcription */
    post: operations["swiftink_api_routers_transcript_transcript_router_create_transcription"];
  };
  "/transcripts/{id}": {
    /**
     * Get Transcript Details
     * @description Get the details of a specific transcript by id
     */
    get: operations["swiftink_api_routers_transcript_transcript_router_get_transcript_details"];
    /**
     * Delete Transcript
     * @description Delete a transcript by id
     */
    delete: operations["swiftink_api_routers_transcript_transcript_router_delete_transcript"];
  };
  "/apikeys/": {
    /**
     * Get Apikeys
     * @description Get all APIKeys for the current user
     */
    get: operations["swiftink_api_routers_apikey_apikey_router_get_apikeys"];
    /**
     * Create Apikey
     * @description Create a new APIKey for the current user
     */
    post: operations["swiftink_api_routers_apikey_apikey_router_create_apikey"];
  };
  "/apikeys/{id}": {
    /**
     * Get Apikey Details
     * @description Get details of an APIKey by ID
     */
    get: operations["swiftink_api_routers_apikey_apikey_router_get_apikey_details"];
    /**
     * Update Apikey
     * @description Update details of an APIKey by ID, such as name
     */
    put: operations["swiftink_api_routers_apikey_apikey_router_update_apikey"];
    /**
     * Delete Apikey
     * @description Delete an APIKey by ID
     */
    delete: operations["swiftink_api_routers_apikey_apikey_router_delete_apikey"];
  };
  "/stripe/create_checkout_session": {
    /**
     * Create Checkout Session
     * @description Create a checkout session for the current user
     */
    post: operations["swiftink_api_routers_stripe_stripe_router_create_checkout_session"];
  };
}

export type webhooks = Record<string, never>;

export interface components {
  schemas: {
    /** TimestampedTextSegment */
    TimestampedTextSegment: {
      /**
       * Start
       * @description Start time of the segment in seconds
       * @example 0
       */
      start: number;
      /**
       * End
       * @description End time of the segment in seconds
       * @example 1
       */
      end: number;
      /**
       * Text
       * @description Text of the segment
       * @example Hello World
       */
      text: string;
    };
    /** TranscriptSchema */
    TranscriptSchema: {
      /**
       * Id
       * Format: uuid
       * @description Unique ID for the transcript
       */
      id?: string;
      /**
       * User Id
       * Format: uuid
       * @description User who owns the transcript
       */
      user_id: string;
      /**
       * Created
       * Format: date-time
       * @description Time the transcript was created
       */
      created: string;
      /**
       * Updated
       * Format: date-time
       * @description Time the transcript was last updated
       */
      updated: string;
      /**
       * Name
       * @description Name of the transcript
       */
      name?: string;
      /**
       * Status
       * @description Current status of the transcript
       * @default pending
       */
      status?: string;
      /**
       * Validated
       * @description Whether the file has been validated
       * @default false
       */
      validated?: boolean;
      /**
       * Transcribed
       * @description Whether the file has been transcribed
       * @default false
       */
      transcribed?: boolean;
      /**
       * Context
       * @description Transcript context, elaborate on the setting, content, speakers, etc. The model will only consider the last 224 tokens of the string if what's provided is longer.
       */
      context?: string;
      /**
       * Translate
       * @description Whether to translate the transcript to English
       * @default false
       */
      translate?: boolean;
      /**
       * Url
       * @description URL of the file
       * @default https://example.com
       */
      url?: string;
      /**
       * Webhooks
       * @description Webhooks to call when the transcript is updated, a JSON object with key "url" mapped to the http/https URL of the endpoint to POST the JSON transcript to on completion
       */
      webhooks?: Record<string, never>;
      /**
       * File Mimetype
       * @description Mimetype of file
       */
      file_mimetype?: string;
      /**
       * File Extension
       * @description File extension
       */
      file_extension?: string;
      /**
       * Duration Seconds
       * @description Duration of the file in seconds
       */
      duration_seconds?: number;
      /**
       * Language
       * @description Language of the transcript, in ISO 639-1
       */
      language?: string;
      /**
       * Text Segments
       * @description List of text segments with timestamps
       */
      text_segments: components["schemas"]["TimestampedTextSegment"][];
      /**
       * Text
       * @description Transcript text
       */
      text?: string;
      /**
       * Heading Segments
       * @description An outline of the transcript in the form of timestamped headings
       */
      heading_segments: components["schemas"]["TimestampedTextSegment"][];
      /**
       * Summary
       * @description Transcript summary
       */
      summary?: string;
    };
    /** CreateTranscriptionRequest */
    CreateTranscriptionRequest: {
      /**
       * Name
       * @description The name of the transcription
       * @example David Attenborough - Planet Earth II - Episode 1 - The Beasts of the Southern Wild
       */
      name?: string;
      /**
       * Url
       * Format: uri
       * @description The url of the audio file to be transcribed.
       * @example https://storage.googleapis.com/gtv-videos-bucket/sample/TearsOfSteel.mp4
       */
      url: string;
    };
    /** APIKeySchema */
    APIKeySchema: {
      /**
       * Id
       * @description The API Key's unique id
       */
      id?: string;
      /**
       * User Id
       * Format: uuid
       * @description The user that owns this API Key
       */
      user_id: string;
      /**
       * Name
       * @description The API Key's name, user defined
       */
      name?: string;
      /**
       * Created
       * Format: date-time
       * @description Time the record was created
       */
      created: string;
      /**
       * Updated
       * Format: date-time
       * @description Time the record was last updated
       */
      updated: string;
      /**
       * Last Used
       * Format: date-time
       * @description Time the record was last used
       */
      last_used?: string;
    };
    /** CreateAPIKeyResponse */
    CreateAPIKeyResponse: {
      /**
       * Id
       * @description The API Key's unique id
       */
      id?: string;
      /**
       * User Id
       * Format: uuid
       * @description The user that owns this API Key
       */
      user_id: string;
      /**
       * Name
       * @description The API Key's name, user defined
       */
      name?: string;
      /**
       * Created
       * Format: date-time
       * @description Time the record was created
       */
      created: string;
      /**
       * Updated
       * Format: date-time
       * @description Time the record was last updated
       */
      updated: string;
      /**
       * Last Used
       * Format: date-time
       * @description Time the record was last used
       */
      last_used?: string;
      /**
       * Secret
       * @description The secret key string to use in plugins and HTTP headers for Swiftink authentication
       */
      secret: string;
    };
    /** UpdateAPIKeyRequest */
    UpdateAPIKeyRequest: {
      /**
       * Name
       * @description The name of the API Key
       */
      name?: string;
    };
    /** CreateCheckoutSessionResponse */
    CreateCheckoutSessionResponse: {
      /**
       * Url
       * @description The url to redirect the user to to complete the checkout process
       */
      url: string;
    };
    /**
     * PriceOptions
     * @description An enumeration.
     * @enum {string}
     */
    PriceOptions: "individual_monthly" | "individual_yearly" | "professional_monthly" | "professional_yearly" | "business_monthly" | "business_yearly";
    /** CreateCheckoutSessionRequest */
    CreateCheckoutSessionRequest: {
      /** @description The price to create a checkout session for */
      price: components["schemas"]["PriceOptions"];
    };
  };
  responses: never;
  parameters: never;
  requestBodies: never;
  headers: never;
  pathItems: never;
}

export type external = Record<string, never>;

export interface operations {

  /** Hello */
  swiftink_api_api_hello: {
    responses: {
      /** @description OK */
      200: never;
    };
  };
  /** Me */
  swiftink_api_api_me: {
    responses: {
      /** @description OK */
      200: never;
    };
  };
  /**
   * Get Transcripts
   * @description Get all transcripts for the current user
   */
  swiftink_api_routers_transcript_transcript_router_get_transcripts: {
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": components["schemas"]["TranscriptSchema"][];
        };
      };
    };
  };
  /** Create Transcription */
  swiftink_api_routers_transcript_transcript_router_create_transcription: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["CreateTranscriptionRequest"];
      };
    };
    responses: {
      /** @description Created */
      201: {
        content: {
          "application/json": components["schemas"]["TranscriptSchema"];
        };
      };
      /** @description Bad Request */
      400: {
        content: {
          "application/json": {
            [key: string]: string | undefined;
          };
        };
      };
    };
  };
  /**
   * Get Transcript Details
   * @description Get the details of a specific transcript by id
   */
  swiftink_api_routers_transcript_transcript_router_get_transcript_details: {
    parameters: {
      path: {
        id: string;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": components["schemas"]["TranscriptSchema"];
        };
      };
      /** @description Forbidden */
      403: {
        content: {
          "application/json": {
            [key: string]: string | undefined;
          };
        };
      };
      /** @description Not Found */
      404: never;
    };
  };
  /**
   * Delete Transcript
   * @description Delete a transcript by id
   */
  swiftink_api_routers_transcript_transcript_router_delete_transcript: {
    parameters: {
      path: {
        id: string;
      };
    };
    responses: {
      /** @description No Content */
      204: never;
      /** @description Forbidden */
      403: {
        content: {
          "application/json": {
            [key: string]: string | undefined;
          };
        };
      };
      /** @description Not Found */
      404: never;
    };
  };
  /**
   * Get Apikeys
   * @description Get all APIKeys for the current user
   */
  swiftink_api_routers_apikey_apikey_router_get_apikeys: {
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": components["schemas"]["APIKeySchema"][];
        };
      };
    };
  };
  /**
   * Create Apikey
   * @description Create a new APIKey for the current user
   */
  swiftink_api_routers_apikey_apikey_router_create_apikey: {
    responses: {
      /** @description Created */
      201: {
        content: {
          "application/json": components["schemas"]["CreateAPIKeyResponse"];
        };
      };
    };
  };
  /**
   * Get Apikey Details
   * @description Get details of an APIKey by ID
   */
  swiftink_api_routers_apikey_apikey_router_get_apikey_details: {
    parameters: {
      path: {
        id: string;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": components["schemas"]["APIKeySchema"];
        };
      };
      /** @description Forbidden */
      403: {
        content: {
          "application/json": {
            [key: string]: string | undefined;
          };
        };
      };
      /** @description Not Found */
      404: never;
    };
  };
  /**
   * Update Apikey
   * @description Update details of an APIKey by ID, such as name
   */
  swiftink_api_routers_apikey_apikey_router_update_apikey: {
    parameters: {
      path: {
        id: string;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["UpdateAPIKeyRequest"];
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": components["schemas"]["APIKeySchema"];
        };
      };
      /** @description Forbidden */
      403: {
        content: {
          "application/json": {
            [key: string]: string | undefined;
          };
        };
      };
      /** @description Not Found */
      404: never;
    };
  };
  /**
   * Delete Apikey
   * @description Delete an APIKey by ID
   */
  swiftink_api_routers_apikey_apikey_router_delete_apikey: {
    parameters: {
      path: {
        id: string;
      };
    };
    responses: {
      /** @description No Content */
      204: never;
      /** @description Forbidden */
      403: {
        content: {
          "application/json": {
            [key: string]: string | undefined;
          };
        };
      };
      /** @description Not Found */
      404: never;
    };
  };
  /**
   * Create Checkout Session
   * @description Create a checkout session for the current user
   */
  swiftink_api_routers_stripe_stripe_router_create_checkout_session: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["CreateCheckoutSessionRequest"];
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": components["schemas"]["CreateCheckoutSessionResponse"];
        };
      };
    };
  };
}
